{"version":3,"file":"static/js/298.6173f6a9.chunk.js","mappings":"+MA8BA,EA3Be,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACb,qBAASC,UAAU,mBAAnB,WACE,+BACE,eAAIA,UAAU,SAAd,SAAwBD,EAAKE,UAC7B,cAAGD,UAAU,OAAb,SAAqBD,EAAKG,QAC1B,cAAGF,UAAU,SAASG,KAAMJ,EAAKK,KAAjC,SACGL,EAAKM,aAGV,eAAIL,UAAU,SAAd,SACGD,EAAKO,OAAOC,KAAI,SAACC,GAAD,OACf,wBAAiBA,GAARA,YCTXC,EAAY,SAAC,GAAD,IAAGV,EAAH,EAAGA,KAAH,OAChB,iBAAKC,UAAU,YAAf,WACE,gBAAKA,UAAU,UAAUU,GAAG,eAC5B,gBAAKV,UAAU,QAAf,UACE,eAAIA,UAAU,YAAd,yBAEDD,EAAKQ,KAAI,SAACN,GAAD,OACR,SAAC,EAAD,CAAQF,KAAME,GAAaA,EAAOI,eAiBxCI,EAAUE,aAAe,CACvBZ,KAAM,IAGR,QCJA,EA1BY,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACV,qBAASC,UAAU,iBAAnB,WACE,+BACE,+BACE,cAAGG,KAAMJ,EAAKK,KAAd,SAAqBL,EAAKa,UAD5B,MAC4Cb,EAAKc,aAEjD,eAAGb,UAAU,YAAb,cAA2BD,EAAKe,iBAElC,eAAId,UAAU,SAAd,SACGD,EAAKO,OAAOC,KAAI,SAACC,GAAD,OACf,wBAAiBA,GAARA,YCRXO,EAAa,SAAC,GAAD,IAAGhB,EAAH,EAAGA,KAAH,OACjB,iBAAKC,UAAU,aAAf,WACE,gBAAKA,UAAU,UAAUU,GAAG,gBAC5B,gBAAKV,UAAU,QAAf,UACE,eAAIA,UAAU,YAAd,0BAEDD,EAAKQ,KAAI,SAACS,GAAD,OACR,SAAC,EAAD,CAAKjB,KAAMiB,GAAUA,EAAIJ,gBAiB/BG,EAAWJ,aAAe,CACxBZ,KAAM,IAGR,QCRA,EAtBe,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACb,gBAAIC,UAAU,mBAAd,WACE,mBAAQA,UAAU,eAAlB,UACE,6BACE,cAAGG,KAAMJ,EAAKK,KAAd,SAAqBL,EAAKkB,aAG9B,eAAGjB,UAAU,cAAb,UACGD,EAAKmB,KADR,MACiBnB,EAAKoB,kBCNpBC,EAAU,SAACC,GAAD,OAEdA,EAAQd,KAAI,SAACe,EAAQC,GAAT,OACV,SAAC,EAAD,CACExB,KAAMuB,EAENE,KAAMD,IAAQF,EAAQI,OAAS,GAD1BH,EAAOL,WAKZS,EAAU,SAAC,GAAD,IAAG3B,EAAH,EAAGA,KAAH,OACd,iBAAKC,UAAU,UAAf,WACE,gBAAKA,UAAU,UAAUU,GAAG,aAC5B,gBAAKV,UAAU,QAAf,UACE,eAAIA,UAAU,YAAd,+BAEF,eAAIA,UAAU,cAAd,SAA6BoB,EAAQrB,SAezC2B,EAAQf,aAAe,CACrBZ,KAAM,IAGR,QClBA,EAnBgB,SAAC,GAAD,IAAGA,EAAH,EAAGA,KAAH,OACd,gBAAKC,UAAU,oBAAf,UACE,4BACE,6BACE,cAAGG,KAAMJ,EAAKK,KAAd,SAAqBL,EAAKkB,WAE5B,cAAGjB,UAAU,eAAb,SAA6BD,EAAK4B,mBCJlCP,EAAU,SAACQ,GAAD,OAEdA,EAASrB,KAAI,SAACsB,EAASN,GAAV,OACX,SAAC,EAAD,CACExB,KAAM8B,EAENL,KAAMD,IAAQK,EAASH,OAAS,GAD3BI,EAAQZ,WAKba,EAAW,SAAC,GAAD,IAAG/B,EAAH,EAAGA,KAAH,OACf,iBAAKC,UAAU,WAAf,WACE,gBAAKA,UAAU,UAAUU,GAAG,cAC5B,gBAAKV,UAAU,QAAf,UACE,eAAIA,UAAU,YAAd,yBAEF,eAAIA,UAAU,eAAd,SAA8BoB,EAAQrB,SAc1C+B,EAASnB,aAAe,CACtBZ,KAAM,IAGR,QCJA,EAnCgB,CACd,CACEM,OAAQ,0CACRD,KAAM,yIACNH,OAAQ,uCACRC,KAAM,6BACNI,OAAQ,CACN,8LACA,+CACA,8JAGJ,CACED,OAAQ,kDACRD,KAAM,uGACNH,OAAQ,2BACRC,KAAM,4BACNI,OAAQ,CACN,oNACA,iCAGJ,CACED,OACE,0EACFD,KAAM,wDACNH,OAAQ,qDACRC,KAAM,gCACNI,OAAQ,CACN,+GACA,6ECuBN,EArDkB,CAChB,CACEM,QAAS,SACTC,SAAU,gBACVT,KAAM,oBACNU,UAAW,2BACXR,OAAQ,CACN,mFACA,iJAGJ,CACEM,QAAS,QACTC,SAAU,sDACVT,KAAM,+BACNU,UAAW,4BACXR,OAAQ,CACN,yFACA,uDACA,sEACA,mGACA,0FACA,6KACA,gPACA,gMACA,oJAGJ,CACEM,QAAS,SACTC,SAAU,2BACVT,KAAM,4BACNU,UAAW,gCACXR,OAAQ,CACN,wHACA,0HACA,gFACA,sFACA,iDACA,4IAGJ,CACEM,QAAS,gEACTC,SAAU,oBACVT,KAAM,yBACNU,UAAW,2BACXR,OAAQ,CACN,gICHN,EA7CgB,CACd,CACEW,MAAO,mBACPC,KAAM,eACNd,KAAM,4EACNe,WAAY,YAEd,CACEF,MAAO,oCACPC,KAAM,aACNd,KAAM,4EACNe,WAAY,yBAEd,CACEF,MAAO,0DACPC,KAAM,aACNd,KAAM,4EACNe,WAAY,yBAEd,CACEF,MAAO,0CACPC,KAAM,WACNd,KAAM,4EACNe,WAAY,yBAEd,CACEF,MAAO,wCACPC,KAAM,WACNd,KAAM,4EACNe,WAAY,yBAEd,CACEF,MAAO,mCACPC,KAAM,WACNd,KAAM,2FACNe,WAAY,yBAEd,CACEF,MAAO,mDACPC,KAAM,YACNd,KAAM,4EACNe,WAAY,2BCrBhB,EApBiB,CACf,CACEF,MACE,8FACFb,KAAM,wDACNuB,WAAY,+CAEd,CACEV,MAAO,6CACPb,KAAM,+CACNuB,WACE,wFAEJ,CACEV,MAAO,4GACPb,KAAM,kJACNuB,WAAY,6CCDVI,EAAW,CAAC,aAAc,WAAY,YAAa,WAkCzD,EAhCe,kBACb,SAACC,EAAA,EAAD,CAAMf,MAAM,SAASgB,YAAY,gCAAjC,UACE,qBAASjC,UAAU,OAAOU,GAAG,SAA7B,WACE,6BACE,iBAAKV,UAAU,QAAf,WACE,eAAI,cAAY,UAAhB,UACE,SAAC,KAAD,CAAMkC,GAAG,SAAT,uBAEF,gBAAKlC,UAAU,iBAAiBmC,MAAO,CAAEC,QAAS,QAAlD,SACGL,EAASxB,KAAI,SAAC8B,GAAD,OACZ,yBACE,eAAGlC,KAAI,WAAMkC,EAAIC,eAAjB,yCAC6C,IAD7C,OAEGD,EAFH,OAGS,IAHT,mCADOA,cAWjB,SAAC,EAAD,CAAYtC,KAAMwC,KAClB,mBACA,SAAC,EAAD,CAAUxC,KAAM6B,KAChB,mBACA,SAAC,EAAD,CAAW7B,KAAMyC,KACjB,mBACA,SAAC,EAAD,CAASzC,KAAMsB","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/Articles/Article.js","components/Resume/Articles.js","data/resume/degrees.js","data/resume/positions.js","data/resume/courses.js","data/resume/articles.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Degree = ({ data }) => (\n  <article className=\"degree-container\">\n    <header>\n      <h3 className=\"degree\">{data.degree}</h3>\n      <p className=\"date\">{data.year}</p>\n      <a className=\"school\" href={data.link}>\n        {data.school}\n      </a>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nDegree.propTypes = {\n  data: PropTypes.shape({\n    degree: PropTypes.string.isRequired,\n    school: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    year: PropTypes.number.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default Degree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Degree from './Education/Degree';\n\nconst Education = ({ data }) => (\n  <div className=\"education\">\n    <div className=\"link-to\" id=\"education\" />\n    <div className=\"title\">\n      <h2 className=\"blue-text\">Education</h2>\n    </div>\n    {data.map((degree) => (\n      <Degree data={degree} key={degree.school} />\n    ))}\n  </div>\n);\n\nEducation.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      school: PropTypes.string,\n      degree: PropTypes.string,\n      link: PropTypes.string,\n      year: PropTypes.number,\n      points: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n};\n\nEducation.defaultProps = {\n  data: [],\n};\n\nexport default Education;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Job = ({ data }) => (\n  <article className=\"jobs-container\">\n    <header>\n      <strong>\n        <a href={data.link}>{data.company}</a> - {data.position}\n      </strong>\n      <p className=\"daterange\"> {data.daterange}</p>\n    </header>\n    <ul className=\"points\">\n      {data.points.map((point) => (\n        <li key={point}>{point}</li>\n      ))}\n    </ul>\n  </article>\n);\n\nJob.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    company: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    daterange: PropTypes.string.isRequired,\n    points: PropTypes.arrayOf(PropTypes.string).isRequired,\n  }).isRequired,\n};\n\nexport default Job;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Job from './Experience/Job';\n\nconst Experience = ({ data }) => (\n  <div className=\"experience\">\n    <div className=\"link-to\" id=\"experience\" />\n    <div className=\"title\">\n      <h2 className=\"blue-text\">Experience</h2>\n    </div>\n    {data.map((job) => (\n      <Job data={job} key={job.company} />\n    ))}\n  </div>\n);\n\nExperience.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      company: PropTypes.string,\n      position: PropTypes.string,\n      link: PropTypes.string,\n      daterange: PropTypes.string,\n      points: PropTypes.arrayOf(PropTypes.string),\n    }),\n  ),\n};\n\nExperience.defaultProps = {\n  data: [],\n};\n\nexport default Experience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Course = ({ data }) => (\n  <li className=\"course-container\">\n    <header className=\"course-title\">\n      <strong>\n        <a href={data.link}>{data.title}</a>\n      </strong>\n    </header>\n    <p className=\"course-date\">\n      {data.date} - {data.university}\n    </p>\n  </li>\n);\n\nCourse.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    university: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Course;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Course from './Courses/Course';\n\nconst getRows = (courses) =>\n  // eslint-disable-next-line implicit-arrow-linebreak\n  courses.map((course, idx) => (\n    <Course\n      data={course}\n      key={course.title}\n      last={idx === courses.length - 1}\n    />\n  ));\n\nconst Courses = ({ data }) => (\n  <div className=\"courses\">\n    <div className=\"link-to\" id=\"courses\" />\n    <div className=\"title\">\n      <h2 className=\"blue-text\">Online Courses</h2>\n    </div>\n    <ul className=\"course-list\">{getRows(data)}</ul>\n  </div>\n);\n\nCourses.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      date: PropTypes.string,\n      link: PropTypes.string,\n      university: PropTypes.string,\n    }),\n  ),\n};\n\nCourses.defaultProps = {\n  data: [],\n};\n\nexport default Courses;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Article = ({ data }) => (\n  <div className=\"article-container\">\n    <div>\n      <strong>\n        <a href={data.link}>{data.title}</a>\n      </strong>\n      <p className=\"article-date\">{data.conference}</p>\n    </div>\n  </div>\n);\n\nArticle.propTypes = {\n  data: PropTypes.shape({\n    link: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    conference: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Article;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Article from './Articles/Article';\n\nconst getRows = (articles) =>\n  // eslint-disable-next-line implicit-arrow-linebreak\n  articles.map((article, idx) => (\n    <Article\n      data={article}\n      key={article.title}\n      last={idx === articles.length - 1}\n    />\n  ));\n\nconst Articles = ({ data }) => (\n  <div className=\"articles\">\n    <div className=\"link-to\" id=\"articles\" />\n    <div className=\"title\">\n      <h2 className=\"blue-text\">Articles</h2>\n    </div>\n    <ul className=\"article-list\">{getRows(data)}</ul>\n  </div>\n);\n\nArticles.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      link: PropTypes.string,\n      university: PropTypes.string,\n    }),\n  ),\n};\n\nArticles.defaultProps = {\n  data: [],\n};\n\nexport default Articles;\n","const degrees = [\n  {\n    school: 'Imperial College London, United Kingdom',\n    link: 'https://www.imperial.ac.uk/media/imperial-college/study/programme-specifications/eee/1819/CS-ProgSpec(J9U4)-2018-19---February2019.pdf',\n    degree: 'MSc. in Control Systems, Distinction',\n    year: 'Otober 2017 - October 2018',\n    points: [\n      'Mathematics for Signals and Systems, System Identification, Optimisation, Predictive Control, Estimation and Fault Detection, Pattern Recognition and Machine Learning for Computer Vision.',\n      'The overall examination mark was 75.4 / 100.',\n      'Achieved 83.4 / 100 on thesis: \"Energy savings from an Ecological Cooperative Adaptive Cruise Control: a Battery Electric Vehicle platoon investigation\".',\n    ],\n  },\n  {\n    school: 'Delft University of Technology, The Netherlands',\n    link: 'https://www.tudelft.nl/en/education/programmes/masters/systems-control/msc-systems-control/programme',\n    degree: 'Student Exchange Program',\n    year: 'February 2017 - July 2017',\n    points: [\n      'Adaptive and Predictive Control, Modelling and Control of Hybrid Systems, Knowledge Based Control Systems, Networked and Distributed Control Systems, Integration Project Systems and Control and Space Robotics.',\n      'Finished with 7.6 out of 10.',\n    ],\n  },\n  {\n    school:\n      'Faculty of Sciences and Technology - New University of Lisbon, Portugal',\n    link: 'https://guia.unl.pt/en/2020/fct/program/853#structure',\n    degree: 'BSc. in Electrical and Computer Engineering, Top 1',\n    year: 'September 2013 - January 2017',\n    points: [\n      'Mathematics, Physics, Energy, Telecommunication, Digital Systems, Electronics, Robotics and Control Systems.',\n      'Finished the degree with 17.4 out of 20 being top 1 out of 96 students.',\n    ],\n  },\n];\n\nexport default degrees;\n","const positions = [\n  {\n    company: 'OpenBB',\n    position: 'Founder & CEO',\n    link: 'https://openbb.co',\n    daterange: 'September 2021 - Present',\n    points: [\n      'Raised $ 8.5M in funding from an open source project I started in my spare time.',\n      'Built a team of over 20 people from scratch in less than 1 year, including: engineering, product, marketing, design and finance departments.',\n    ],\n  },\n  {\n    company: 'NURVV',\n    position: 'Sensor Fusion Engineer | Embedded Firmware Engineer',\n    link: 'https://www.nurvv.com/en-gb/',\n    daterange: 'March 2020 - October 2021',\n    points: [\n      'The job required proficiency with C and C++ programming language and Python scripting.',\n      'Improved the time-to-first-fix of the GNSS receiver.',\n      'Re-designed the concept of altitude estimation using Kalman Filter.',\n      'Added a GPS filtering algorithm for outliers, including an approach to pick a valid start point.',\n      'Developed a new method of calibrating insoles to increase their life span and accuracy.',\n      'Created and cleaned Nurvv running dataset which allowed to implement a new footstrike detection and INS algorithm to improve distance covered and speed reported to users.',\n      'Developed a python data analyzer that processes the data from a running session and produces a html report, which allows us to assess the state of the product, and helps us in development to make sure the product is behaving as expected.',\n      'Developed a python sensor analyzer that allows to analyze the raw samples seen by the trackers over a running session, to understand - at a low level - if something unexpected is happening.',\n      'Started the development of a python CLI, similar to the iOS and Android apps, to be used by the firmware team to communicate with the trackers.',\n    ],\n  },\n  {\n    company: 'U-blox',\n    position: 'Software Design Engineer',\n    link: 'https://www.u-blox.com/en',\n    daterange: 'November 2018 - February 2020',\n    points: [\n      'Designing and maintaining the internal and external customer-facing features and other higher-level software features',\n      'Taking part in the whole embedded software development life cycle, in order to release state of the art GNSS receivers.',\n      'Proficiency in programming and scripting languages (C, C++, MATLAB and Perl).',\n      'Knowledge in software testing, test automation and continuous integration concepts.',\n      'Project tracking and collaboration (e.g. Jira)',\n      'Experience with integrated development environments (e.g. Visual Studio Code), revision control systems (e.g. Git) and Linux computing.',\n    ],\n  },\n  {\n    company: 'Faculty of Sciences and Technology - New University of Lisbon',\n    position: 'Teacher Assistant',\n    link: 'https://www.fct.unl.pt',\n    daterange: 'January 2016 - June 2016',\n    points: [\n      'Help 75 students to understand the theory of the Signal Theory course, and guide them throughout their MATLAB assignments.',\n    ],\n  },\n];\n\nexport default positions;\n","const courses = [\n  {\n    title: 'Machine Learning',\n    date: '2020 January',\n    link: 'https://www.coursera.org/account/accomplishments/certificate/G7DUXURJC7MP',\n    university: 'Stanford',\n  },\n  {\n    title: 'Introduction to Self-Driving Cars',\n    date: '2020 April',\n    link: 'https://www.coursera.org/account/accomplishments/certificate/PNV6AJQ9YX63',\n    university: 'University of Toronto',\n  },\n  {\n    title: 'State Estimation and Localization for Self-Driving Cars',\n    date: '2020 April',\n    link: 'https://www.coursera.org/account/accomplishments/certificate/DNPSUAX5VH4R',\n    university: 'University of Toronto',\n  },\n  {\n    title: 'Visual Perception for Self-Driving Cars',\n    date: '2020 May',\n    link: 'https://www.coursera.org/account/accomplishments/certificate/LE54G346BC52',\n    university: 'University of Toronto',\n  },\n  {\n    title: 'Motion Planning for Self-Driving Cars',\n    date: '2020 May',\n    link: 'https://www.coursera.org/account/accomplishments/certificate/MHDX5G7HBAQA',\n    university: 'University of Toronto',\n  },\n  {\n    title: 'Self-Driving Cars Specialization',\n    date: '2020 May',\n    link: 'https://www.coursera.org/account/accomplishments/specialization/certificate/26529W9YTUFE',\n    university: 'University of Toronto',\n  },\n  {\n    title: 'Kinematics: Describing the Motions of Spacecraft',\n    date: '2021 June',\n    link: 'https://www.coursera.org/account/accomplishments/certificate/MGMBCHRF5ASS',\n    university: 'University of Colorado',\n  },\n];\n\nexport default courses;\n","const articles = [\n  {\n    title:\n      'Energy savings from an Eco-Cooperative Adaptive Cruise Control: a BEV platoon investigation',\n    link: 'https://ieeexplore.ieee.org/abstract/document/8796226',\n    conference: '2019 18th European Control Conference (ECC)',\n  },\n  {\n    title: 'Step Detection using SVM on NURVV Trackers',\n    link: 'https://ieeexplore.ieee.org/document/9680024',\n    conference:\n      '2021 20th IEEE International Conference on Machine Learning and Applications (ICMLA)',\n  },\n  {\n    title: 'Forecasting models for time-series: a comparative study between classical methodologies and Deep Learning',\n    link: 'https://ciencia.iscte-iul.pt/publications/forecasting-models-for-time-series-a-comparative-study-between-classical-methodologies-and-deep/83651',\n    conference: 'XXV Portuguese Statistical Society (SPE)',\n  },\n];\n\nexport default articles;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\n\nimport Education from '../components/Resume/Education';\nimport Experience from '../components/Resume/Experience';\nimport Courses from '../components/Resume/Courses';\nimport Articles from '../components/Resume/Articles';\n\nimport degrees from '../data/resume/degrees';\nimport positions from '../data/resume/positions';\nimport courses from '../data/resume/courses';\nimport articles from '../data/resume/articles';\n\nconst sections = ['Experience', 'Articles', 'Education', 'Courses'];\n\nconst Resume = () => (\n  <Main title=\"Resume\" description=\"Didier Rodrigues Lopes Resume\">\n    <article className=\"post\" id=\"resume\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\">\n            <Link to=\"resume\">Resume</Link>\n          </h2>\n          <div className=\"link-container\" style={{ display: 'flex' }}>\n            {sections.map((sec) => (\n              <h4 key={sec}>\n                <a href={`#${sec.toLowerCase()}`}>\n                  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'|'}&nbsp;\n                  {sec}\n                  &nbsp;{'|'}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </a>\n              </h4>\n            ))}\n          </div>\n        </div>\n      </header>\n      <Experience data={positions} />\n      <hr />\n      <Articles data={articles} />\n      <hr />\n      <Education data={degrees} />\n      <hr />\n      <Courses data={courses} />\n    </article>\n  </Main>\n);\n\nexport default Resume;\n"],"names":["data","className","degree","year","href","link","school","points","map","point","Education","id","defaultProps","company","position","daterange","Experience","job","title","date","university","getRows","courses","course","idx","last","length","Courses","conference","articles","article","Articles","sections","Main","description","to","style","display","sec","toLowerCase","positions","degrees"],"sourceRoot":""}